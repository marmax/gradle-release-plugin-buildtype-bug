// ./gradlew clean collectExecutables -Prelease.version=1.0.0-SNAPSHOT
// ./gradlew clean release -Prelease.scope=patch -Prelease.stage=SNAPSHOT
// ./gradlew clean release -Prelease.scope=patch -Prelease.stage=final

plugins {
    id 'org.ajoberstar.release-opinion' version '1.4.2'
}

import org.ajoberstar.grgit.Grgit
import org.ajoberstar.gradle.git.release.opinion.Strategies

apply plugin: 'c'

ext {
    bindist = file("$buildDir/bindist")
}

release {
    grgit = Grgit.open()

    versionStrategy Strategies.SNAPSHOT

    defaultVersionStrategy = Strategies.SNAPSHOT

    tagStrategy {
        prefixNameWithV = false
    }
}

tasks.release.dependsOn 'build'//, 'publishToMavelLocal'

model {
    platforms {
        linux_x86 {
            architecture "x86"
            operatingSystem "linux"
        }
        linux_amd64 {
            architecture "x86_64"
            operatingSystem "linux"
        }
    }

    buildTypes {
        debug
        release
    }
}

model {
    components {
        hello(NativeExecutableSpec) {
            targetPlatform 'linux_x86'
            targetPlatform 'linux_amd64'

            sources.c {
                source {
                    srcDir 'src/main/c'
                    include 'hello.c'
                }
            }

            binaries.all {
                cCompiler.args '-std=c99'
            }
        }
    }

    tasks {
        collectExecutables(Task) {
            outputs.dir bindist

            def bins = $.binaries
                    .withType(NativeExecutableBinarySpec)
                    .findAll { 
                        println "bin[${it.name}] is of buildType: ${it.buildType.name}"
                        // it.buildable && it.buildType == buildTypes.release
                        it.buildable
                    }

            dependsOn bins

            doLast {
                bins.each { bin ->
                    def targetPlatformName = bin.targetPlatform.name

                    copy {
                        from bin.executableFile
                        into "$bindist/$targetPlatformName/"
                    }
                }
            }
        }
    }
}
